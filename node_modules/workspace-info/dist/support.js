"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformLernaConfigToYarnConfig = exports.getPackageDependencies = exports.readJsonFile = exports.getWorkspacePackages = void 0;
var tslib_1 = require("tslib");
var fs_1 = tslib_1.__importDefault(require("fs"));
var path_1 = tslib_1.__importDefault(require("path"));
var map_workspaces_1 = require("./map-workspaces");
function getWorkspacePackages(_a) {
    var cwd = _a.cwd, packageJSON = _a.packageJSON;
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var map;
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, map_workspaces_1.mapWorkspaces({
                        pkg: packageJSON,
                        cwd: cwd,
                    })];
                case 1:
                    map = _b.sent();
                    return [2 /*return*/, Object.assign.apply(Object, tslib_1.__spreadArrays([{}], Array.from(map.entries()).map(function (_a) {
                            var _b;
                            var k = _a[0], v = _a[1];
                            return _b = {}, _b[k] = v, _b;
                        })))];
            }
        });
    });
}
exports.getWorkspacePackages = getWorkspacePackages;
function readJsonFile(filePath) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var packageJSON, _a, _b;
        return tslib_1.__generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _b = (_a = JSON).parse;
                    return [4 /*yield*/, fs_1.default.promises
                            .readFile(path_1.default.resolve(filePath))
                            .then(function (x) { return x.toString(); })];
                case 1:
                    packageJSON = _b.apply(_a, [_c.sent()]);
                    return [2 /*return*/, packageJSON];
            }
        });
    });
}
exports.readJsonFile = readJsonFile;
function getPackageDependencies(_a) {
    var packageJSON = _a.packageJSON, includeDev = _a.includeDev, includePeer = _a.includePeer;
    var names = Object.keys(packageJSON.dependencies || {});
    if (includeDev) {
        names = names.concat(Object.keys(packageJSON.devDependencies || {}));
    }
    if (includePeer) {
        names = names.concat(Object.keys(packageJSON.peerDependencies || {}));
    }
    return names;
}
exports.getPackageDependencies = getPackageDependencies;
function transformLernaConfigToYarnConfig(lernaJson) {
    if (lernaJson === null || lernaJson === void 0 ? void 0 : lernaJson.packages) {
        return tslib_1.__assign(tslib_1.__assign({}, lernaJson), { workspaces: {
                packages: lernaJson === null || lernaJson === void 0 ? void 0 : lernaJson.packages,
            } });
    }
    return lernaJson;
}
exports.transformLernaConfigToYarnConfig = transformLernaConfigToYarnConfig;
//# sourceMappingURL=support.js.map